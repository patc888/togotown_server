/*
 * This file is generated by jOOQ.
*/
package org.jooq.dev_tt.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.dev_tt.DevTt;
import org.jooq.dev_tt.Indexes;
import org.jooq.dev_tt.Keys;
import org.jooq.dev_tt.tables.records.MatchUserRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchUser extends TableImpl<MatchUserRecord> {

    private static final long serialVersionUID = 262973021;

    /**
     * The reference instance of <code>dev_tt.match_user</code>
     */
    public static final MatchUser MATCH_USER = new MatchUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MatchUserRecord> getRecordType() {
        return MatchUserRecord.class;
    }

    /**
     * The column <code>dev_tt.match_user.match_id</code>.
     */
    public final TableField<MatchUserRecord, Integer> MATCH_ID = createField("match_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dev_tt.match_user.user_id</code>.
     */
    public final TableField<MatchUserRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.match_user.opp_id</code>.
     */
    public final TableField<MatchUserRecord, Integer> OPP_ID = createField("opp_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.match_user.state</code>.
     */
    public final TableField<MatchUserRecord, Byte> STATE = createField("state", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>dev_tt.match_user.xp</code>.
     */
    public final TableField<MatchUserRecord, Integer> XP = createField("xp", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.match_user.results</code>.
     */
    public final TableField<MatchUserRecord, String> RESULTS = createField("results", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>dev_tt.match_user.correct_count</code>.
     */
    public final TableField<MatchUserRecord, Integer> CORRECT_COUNT = createField("correct_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.match_user.xp_earned</code>.
     */
    public final TableField<MatchUserRecord, Integer> XP_EARNED = createField("xp_earned", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.match_user.coins_earned</code>.
     */
    public final TableField<MatchUserRecord, Integer> COINS_EARNED = createField("coins_earned", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.match_user.created</code>.
     */
    public final TableField<MatchUserRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>dev_tt.match_user</code> table reference
     */
    public MatchUser() {
        this(DSL.name("match_user"), null);
    }

    /**
     * Create an aliased <code>dev_tt.match_user</code> table reference
     */
    public MatchUser(String alias) {
        this(DSL.name(alias), MATCH_USER);
    }

    /**
     * Create an aliased <code>dev_tt.match_user</code> table reference
     */
    public MatchUser(Name alias) {
        this(alias, MATCH_USER);
    }

    private MatchUser(Name alias, Table<MatchUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private MatchUser(Name alias, Table<MatchUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevTt.DEV_TT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MATCH_USER_CREATED_IDX, Indexes.MATCH_USER_MATCH_IDX, Indexes.MATCH_USER_OPP_IDX, Indexes.MATCH_USER_PRIMARY, Indexes.MATCH_USER_STATE, Indexes.MATCH_USER_USER_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MatchUserRecord> getPrimaryKey() {
        return Keys.KEY_MATCH_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MatchUserRecord>> getKeys() {
        return Arrays.<UniqueKey<MatchUserRecord>>asList(Keys.KEY_MATCH_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MatchUser as(String alias) {
        return new MatchUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MatchUser as(Name alias) {
        return new MatchUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MatchUser rename(String name) {
        return new MatchUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MatchUser rename(Name name) {
        return new MatchUser(name, null);
    }
}
