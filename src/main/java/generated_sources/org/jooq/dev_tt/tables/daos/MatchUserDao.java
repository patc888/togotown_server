/*
 * This file is generated by jOOQ.
*/
package org.jooq.dev_tt.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.dev_tt.tables.MatchUser;
import org.jooq.dev_tt.tables.records.MatchUserRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchUserDao extends DAOImpl<MatchUserRecord, org.jooq.dev_tt.tables.pojos.MatchUser, Record2<Integer, Integer>> {

    /**
     * Create a new MatchUserDao without any configuration
     */
    public MatchUserDao() {
        super(MatchUser.MATCH_USER, org.jooq.dev_tt.tables.pojos.MatchUser.class);
    }

    /**
     * Create a new MatchUserDao with an attached configuration
     */
    public MatchUserDao(Configuration configuration) {
        super(MatchUser.MATCH_USER, org.jooq.dev_tt.tables.pojos.MatchUser.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<Integer, Integer> getId(org.jooq.dev_tt.tables.pojos.MatchUser object) {
        return compositeKeyRecord(object.getMatchId(), object.getUserId());
    }

    /**
     * Fetch records that have <code>match_id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.MatchUser> fetchByMatchId(Integer... values) {
        return fetch(MatchUser.MATCH_USER.MATCH_ID, values);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.MatchUser> fetchByUserId(Integer... values) {
        return fetch(MatchUser.MATCH_USER.USER_ID, values);
    }

    /**
     * Fetch records that have <code>opp_id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.MatchUser> fetchByOppId(Integer... values) {
        return fetch(MatchUser.MATCH_USER.OPP_ID, values);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.MatchUser> fetchByState(Byte... values) {
        return fetch(MatchUser.MATCH_USER.STATE, values);
    }

    /**
     * Fetch records that have <code>xp IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.MatchUser> fetchByXp(Integer... values) {
        return fetch(MatchUser.MATCH_USER.XP, values);
    }

    /**
     * Fetch records that have <code>results IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.MatchUser> fetchByResults(String... values) {
        return fetch(MatchUser.MATCH_USER.RESULTS, values);
    }

    /**
     * Fetch records that have <code>correct_count IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.MatchUser> fetchByCorrectCount(Integer... values) {
        return fetch(MatchUser.MATCH_USER.CORRECT_COUNT, values);
    }

    /**
     * Fetch records that have <code>xp_earned IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.MatchUser> fetchByXpEarned(Integer... values) {
        return fetch(MatchUser.MATCH_USER.XP_EARNED, values);
    }

    /**
     * Fetch records that have <code>coins_earned IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.MatchUser> fetchByCoinsEarned(Integer... values) {
        return fetch(MatchUser.MATCH_USER.COINS_EARNED, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.MatchUser> fetchByCreated(Timestamp... values) {
        return fetch(MatchUser.MATCH_USER.CREATED, values);
    }
}
