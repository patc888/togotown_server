/*
 * This file is generated by jOOQ.
*/
package org.jooq.dev_tt.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.dev_tt.tables.Phrase;
import org.jooq.dev_tt.tables.records.PhraseRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhraseDao extends DAOImpl<PhraseRecord, org.jooq.dev_tt.tables.pojos.Phrase, Integer> {

    /**
     * Create a new PhraseDao without any configuration
     */
    public PhraseDao() {
        super(Phrase.PHRASE, org.jooq.dev_tt.tables.pojos.Phrase.class);
    }

    /**
     * Create a new PhraseDao with an attached configuration
     */
    public PhraseDao(Configuration configuration) {
        super(Phrase.PHRASE, org.jooq.dev_tt.tables.pojos.Phrase.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(org.jooq.dev_tt.tables.pojos.Phrase object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchById(Integer... values) {
        return fetch(Phrase.PHRASE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.jooq.dev_tt.tables.pojos.Phrase fetchOneById(Integer value) {
        return fetchOne(Phrase.PHRASE.ID, value);
    }

    /**
     * Fetch records that have <code>en_id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchByEnId(Integer... values) {
        return fetch(Phrase.PHRASE.EN_ID, values);
    }

    /**
     * Fetch records that have <code>lang_id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchByLangId(Byte... values) {
        return fetch(Phrase.PHRASE.LANG_ID, values);
    }

    /**
     * Fetch records that have <code>display IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchByDisplay(String... values) {
        return fetch(Phrase.PHRASE.DISPLAY, values);
    }

    /**
     * Fetch records that have <code>pronounce IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchByPronounce(String... values) {
        return fetch(Phrase.PHRASE.PRONOUNCE, values);
    }

    /**
     * Fetch records that have <code>token_count IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchByTokenCount(Byte... values) {
        return fetch(Phrase.PHRASE.TOKEN_COUNT, values);
    }

    /**
     * Fetch records that have <code>token_ids IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchByTokenIds(String... values) {
        return fetch(Phrase.PHRASE.TOKEN_IDS, values);
    }

    /**
     * Fetch records that have <code>sub_ids IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchBySubIds(String... values) {
        return fetch(Phrase.PHRASE.SUB_IDS, values);
    }

    /**
     * Fetch records that have <code>audio IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchByAudio(String... values) {
        return fetch(Phrase.PHRASE.AUDIO, values);
    }

    /**
     * Fetch records that have <code>audio_id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchByAudioId(String... values) {
        return fetch(Phrase.PHRASE.AUDIO_ID, values);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchByActive(String... values) {
        return fetch(Phrase.PHRASE.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>reviewed IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchByReviewed(String... values) {
        return fetch(Phrase.PHRASE.REVIEWED, values);
    }

    /**
     * Fetch records that have <code>last_mod IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Phrase> fetchByLastMod(Timestamp... values) {
        return fetch(Phrase.PHRASE.LAST_MOD, values);
    }
}
