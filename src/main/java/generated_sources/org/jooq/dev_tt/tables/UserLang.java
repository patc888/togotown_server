/*
 * This file is generated by jOOQ.
*/
package org.jooq.dev_tt.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.dev_tt.DevTt;
import org.jooq.dev_tt.Indexes;
import org.jooq.dev_tt.Keys;
import org.jooq.dev_tt.tables.records.UserLangRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserLang extends TableImpl<UserLangRecord> {

    private static final long serialVersionUID = -342022876;

    /**
     * The reference instance of <code>dev_tt.user_lang</code>
     */
    public static final UserLang USER_LANG = new UserLang();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserLangRecord> getRecordType() {
        return UserLangRecord.class;
    }

    /**
     * The column <code>dev_tt.user_lang.user_id</code>.
     */
    public final TableField<UserLangRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_lang.lang_id</code>.
     */
    public final TableField<UserLangRecord, Integer> LANG_ID = createField("lang_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_lang.scene_id</code>.
     */
    public final TableField<UserLangRecord, Integer> SCENE_ID = createField("scene_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_lang.score</code>.
     */
    public final TableField<UserLangRecord, Integer> SCORE = createField("score", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_lang.max_score</code>.
     */
    public final TableField<UserLangRecord, Integer> MAX_SCORE = createField("max_score", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_lang.coins</code>.
     */
    public final TableField<UserLangRecord, Integer> COINS = createField("coins", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_lang.tkeys</code>.
     */
    public final TableField<UserLangRecord, Integer> TKEYS = createField("tkeys", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_lang.sets_progress</code>.
     */
    public final TableField<UserLangRecord, Integer> SETS_PROGRESS = createField("sets_progress", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_lang.sets_count</code>.
     */
    public final TableField<UserLangRecord, Integer> SETS_COUNT = createField("sets_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_lang.seek_matches</code>.
     */
    public final TableField<UserLangRecord, Byte> SEEK_MATCHES = createField("seek_matches", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>dev_tt.user_lang.last_mod</code>.
     */
    public final TableField<UserLangRecord, Timestamp> LAST_MOD = createField("last_mod", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>dev_tt.user_lang</code> table reference
     */
    public UserLang() {
        this(DSL.name("user_lang"), null);
    }

    /**
     * Create an aliased <code>dev_tt.user_lang</code> table reference
     */
    public UserLang(String alias) {
        this(DSL.name(alias), USER_LANG);
    }

    /**
     * Create an aliased <code>dev_tt.user_lang</code> table reference
     */
    public UserLang(Name alias) {
        this(alias, USER_LANG);
    }

    private UserLang(Name alias, Table<UserLangRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserLang(Name alias, Table<UserLangRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevTt.DEV_TT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_LANG_DUEL, Indexes.USER_LANG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserLangRecord> getPrimaryKey() {
        return Keys.KEY_USER_LANG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserLangRecord>> getKeys() {
        return Arrays.<UniqueKey<UserLangRecord>>asList(Keys.KEY_USER_LANG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserLang as(String alias) {
        return new UserLang(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserLang as(Name alias) {
        return new UserLang(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserLang rename(String name) {
        return new UserLang(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserLang rename(Name name) {
        return new UserLang(name, null);
    }
}
