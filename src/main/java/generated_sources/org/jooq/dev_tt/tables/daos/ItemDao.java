/*
 * This file is generated by jOOQ.
*/
package org.jooq.dev_tt.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.dev_tt.tables.Item;
import org.jooq.dev_tt.tables.records.ItemRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemDao extends DAOImpl<ItemRecord, org.jooq.dev_tt.tables.pojos.Item, Integer> {

    /**
     * Create a new ItemDao without any configuration
     */
    public ItemDao() {
        super(Item.ITEM, org.jooq.dev_tt.tables.pojos.Item.class);
    }

    /**
     * Create a new ItemDao with an attached configuration
     */
    public ItemDao(Configuration configuration) {
        super(Item.ITEM, org.jooq.dev_tt.tables.pojos.Item.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(org.jooq.dev_tt.tables.pojos.Item object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Item> fetchById(Integer... values) {
        return fetch(Item.ITEM.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.jooq.dev_tt.tables.pojos.Item fetchOneById(Integer value) {
        return fetchOne(Item.ITEM.ID, value);
    }

    /**
     * Fetch records that have <code>scene_id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Item> fetchBySceneId(Integer... values) {
        return fetch(Item.ITEM.SCENE_ID, values);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Item> fetchByType(String... values) {
        return fetch(Item.ITEM.TYPE, values);
    }

    /**
     * Fetch records that have <code>acquirable IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Item> fetchByAcquirable(String... values) {
        return fetch(Item.ITEM.ACQUIRABLE, values);
    }

    /**
     * Fetch records that have <code>phrase_id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Item> fetchByPhraseId(Integer... values) {
        return fetch(Item.ITEM.PHRASE_ID, values);
    }

    /**
     * Fetch records that have <code>xp_threshold IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Item> fetchByXpThreshold(Integer... values) {
        return fetch(Item.ITEM.XP_THRESHOLD, values);
    }

    /**
     * Fetch records that have <code>probability IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Item> fetchByProbability(Double... values) {
        return fetch(Item.ITEM.PROBABILITY, values);
    }

    /**
     * Fetch records that have <code>cost IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Item> fetchByCost(Integer... values) {
        return fetch(Item.ITEM.COST, values);
    }

    /**
     * Fetch records that have <code>rarity IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Item> fetchByRarity(Integer... values) {
        return fetch(Item.ITEM.RARITY, values);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Item> fetchByActive(String... values) {
        return fetch(Item.ITEM.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>last_mod IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Item> fetchByLastMod(Timestamp... values) {
        return fetch(Item.ITEM.LAST_MOD, values);
    }
}
