/*
 * This file is generated by jOOQ.
*/
package org.jooq.dev_tt.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.dev_tt.DevTt;
import org.jooq.dev_tt.Indexes;
import org.jooq.dev_tt.Keys;
import org.jooq.dev_tt.tables.records.ClueRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Clue extends TableImpl<ClueRecord> {

    private static final long serialVersionUID = 888756426;

    /**
     * The reference instance of <code>dev_tt.clue</code>
     */
    public static final Clue CLUE = new Clue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClueRecord> getRecordType() {
        return ClueRecord.class;
    }

    /**
     * The column <code>dev_tt.clue.id</code>.
     */
    public final TableField<ClueRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>dev_tt.clue.lang_id</code>.
     */
    public final TableField<ClueRecord, Integer> LANG_ID = createField("lang_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.clue.scene_id</code>.
     */
    public final TableField<ClueRecord, Integer> SCENE_ID = createField("scene_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.clue.phrase_id</code>.
     */
    public final TableField<ClueRecord, Integer> PHRASE_ID = createField("phrase_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dev_tt.clue.parent_id</code>.
     */
    public final TableField<ClueRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.clue.spot_ids</code>.
     */
    public final TableField<ClueRecord, String> SPOT_IDS = createField("spot_ids", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>dev_tt.clue.active</code>.
     */
    public final TableField<ClueRecord, String> ACTIVE = createField("active", org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>dev_tt.clue.reviewed</code>.
     */
    public final TableField<ClueRecord, String> REVIEWED = createField("reviewed", org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("F", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>dev_tt.clue.last_mod</code>.
     */
    public final TableField<ClueRecord, Timestamp> LAST_MOD = createField("last_mod", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>dev_tt.clue</code> table reference
     */
    public Clue() {
        this(DSL.name("clue"), null);
    }

    /**
     * Create an aliased <code>dev_tt.clue</code> table reference
     */
    public Clue(String alias) {
        this(DSL.name(alias), CLUE);
    }

    /**
     * Create an aliased <code>dev_tt.clue</code> table reference
     */
    public Clue(Name alias) {
        this(alias, CLUE);
    }

    private Clue(Name alias, Table<ClueRecord> aliased) {
        this(alias, aliased, null);
    }

    private Clue(Name alias, Table<ClueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevTt.DEV_TT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CLUE_PARENT_ID, Indexes.CLUE_PHRASE_ID, Indexes.CLUE_PRIMARY, Indexes.CLUE_SCENE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClueRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClueRecord> getPrimaryKey() {
        return Keys.KEY_CLUE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClueRecord>> getKeys() {
        return Arrays.<UniqueKey<ClueRecord>>asList(Keys.KEY_CLUE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Clue as(String alias) {
        return new Clue(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Clue as(Name alias) {
        return new Clue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Clue rename(String name) {
        return new Clue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Clue rename(Name name) {
        return new Clue(name, null);
    }
}
