/*
 * This file is generated by jOOQ.
*/
package org.jooq.dev_tt.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.dev_tt.DevTt;
import org.jooq.dev_tt.Indexes;
import org.jooq.dev_tt.Keys;
import org.jooq.dev_tt.tables.records.UserItemRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserItem extends TableImpl<UserItemRecord> {

    private static final long serialVersionUID = -1726149338;

    /**
     * The reference instance of <code>dev_tt.user_item</code>
     */
    public static final UserItem USER_ITEM = new UserItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserItemRecord> getRecordType() {
        return UserItemRecord.class;
    }

    /**
     * The column <code>dev_tt.user_item.user_id</code>.
     */
    public final TableField<UserItemRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dev_tt.user_item.lang_id</code>.
     */
    public final TableField<UserItemRecord, Integer> LANG_ID = createField("lang_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_item.phrase_id</code>.
     */
    public final TableField<UserItemRecord, Integer> PHRASE_ID = createField("phrase_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_item.cur_count</code>.
     */
    public final TableField<UserItemRecord, Integer> CUR_COUNT = createField("cur_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_item.total_count</code>.
     */
    public final TableField<UserItemRecord, Integer> TOTAL_COUNT = createField("total_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_item.item_id</code>.
     */
    public final TableField<UserItemRecord, Integer> ITEM_ID = createField("item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("-1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev_tt.user_item.last_mod</code>.
     */
    public final TableField<UserItemRecord, Timestamp> LAST_MOD = createField("last_mod", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>dev_tt.user_item</code> table reference
     */
    public UserItem() {
        this(DSL.name("user_item"), null);
    }

    /**
     * Create an aliased <code>dev_tt.user_item</code> table reference
     */
    public UserItem(String alias) {
        this(DSL.name(alias), USER_ITEM);
    }

    /**
     * Create an aliased <code>dev_tt.user_item</code> table reference
     */
    public UserItem(Name alias) {
        this(alias, USER_ITEM);
    }

    private UserItem(Name alias, Table<UserItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserItem(Name alias, Table<UserItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DevTt.DEV_TT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_ITEM_CUR_COUNT_IDX, Indexes.USER_ITEM_PRIMARY, Indexes.USER_ITEM_USER_LANG_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserItemRecord> getPrimaryKey() {
        return Keys.KEY_USER_ITEM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserItemRecord>> getKeys() {
        return Arrays.<UniqueKey<UserItemRecord>>asList(Keys.KEY_USER_ITEM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserItem as(String alias) {
        return new UserItem(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserItem as(Name alias) {
        return new UserItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserItem rename(String name) {
        return new UserItem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserItem rename(Name name) {
        return new UserItem(name, null);
    }
}
