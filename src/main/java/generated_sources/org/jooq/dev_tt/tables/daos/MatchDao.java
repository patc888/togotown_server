/*
 * This file is generated by jOOQ.
*/
package org.jooq.dev_tt.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.dev_tt.tables.Match;
import org.jooq.dev_tt.tables.records.MatchRecord;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MatchDao extends DAOImpl<MatchRecord, org.jooq.dev_tt.tables.pojos.Match, Integer> {

    /**
     * Create a new MatchDao without any configuration
     */
    public MatchDao() {
        super(Match.MATCH, org.jooq.dev_tt.tables.pojos.Match.class);
    }

    /**
     * Create a new MatchDao with an attached configuration
     */
    public MatchDao(Configuration configuration) {
        super(Match.MATCH, org.jooq.dev_tt.tables.pojos.Match.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(org.jooq.dev_tt.tables.pojos.Match object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Match> fetchById(Integer... values) {
        return fetch(Match.MATCH.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.jooq.dev_tt.tables.pojos.Match fetchOneById(Integer value) {
        return fetchOne(Match.MATCH.ID, value);
    }

    /**
     * Fetch records that have <code>lang_id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Match> fetchByLangId(Integer... values) {
        return fetch(Match.MATCH.LANG_ID, values);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Match> fetchByState(Integer... values) {
        return fetch(Match.MATCH.STATE, values);
    }

    /**
     * Fetch records that have <code>prize_id IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Match> fetchByPrizeId(Integer... values) {
        return fetch(Match.MATCH.PRIZE_ID, values);
    }

    /**
     * Fetch records that have <code>prize_ids IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Match> fetchByPrizeIds(String... values) {
        return fetch(Match.MATCH.PRIZE_IDS, values);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Match> fetchByCreatedBy(Integer... values) {
        return fetch(Match.MATCH.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Match> fetchByCreated(Timestamp... values) {
        return fetch(Match.MATCH.CREATED, values);
    }

    /**
     * Fetch records that have <code>last_mod IN (values)</code>
     */
    public List<org.jooq.dev_tt.tables.pojos.Match> fetchByLastMod(Timestamp... values) {
        return fetch(Match.MATCH.LAST_MOD, values);
    }
}
